name: RomPatcher.js Release

on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: '0 3 * * *' # Daily check at 03:00 UTC

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  UPSTREAM_REPO_API: https://api.github.com/repos/marcrobledo/RomPatcher.js/releases/latest

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      # --- Checkout repo ---
      - name: Checkout repository
        uses: actions/checkout@v5

      # --- Fetch latest upstream tag ---
      - name: Get latest upstream tag
        id: fetch_tag
        run: |
          latest_tag=$(curl -s $UPSTREAM_REPO_API | jq -r '.tag_name')
          echo "Latest upstream tag: $latest_tag"
          echo "VERSION=$latest_tag" >> $GITHUB_ENV

      # --- Update README.md ---
      - name: Update README.md
        run: bash ./scripts/update-readme.sh $VERSION

      # --- Commit README update ---
      - name: Commit README update
        env:
          VERSION: ${{ env.VERSION }}
          GH_PAT: ${{ secrets.PAT }}  # PAT with repo write permissions
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://xstar97:${GH_PAT}@github.com/xstar97/rompatcherjs.git
          git add README.md
          git commit -m "chore: update README to $VERSION" || echo "No changes"
          git push

      # --- Build and push Docker image ---
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: UPSTREAM_TAG=${{ env.VERSION }}

      # --- Tag repo for last build if it doesnâ€™t exist ---
      - name: Tag repo
        env:
          VERSION: ${{ env.VERSION }}
          GH_PAT: ${{ secrets.PAT }}
        run: |
          git remote set-url origin https://xstar97:${GH_PAT}@github.com/xstar97/rompatcherjs.git
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION already exists. Skipping."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag $VERSION
            git push origin $VERSION
          fi

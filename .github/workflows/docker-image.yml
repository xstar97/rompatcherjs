name: Build on RomPatcher.js Release

on:
  workflow_dispatch: # Allow manual trigger
  schedule:
    - cron: '0 3 * * *' # Check daily at 3AM UTC

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPO_URL_API: https://api.github.com/repos/marcrobledo/RomPatcher.js/releases/latest

jobs:
  detect-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write     # ✅ allows tagging/pushing to repo
      packages: write     # ✅ allows publishing to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest upstream tag
        id: latest
        run: |
          latest_tag=$(curl -s ${REPO_URL_API} | jq -r '.tag_name')
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "Latest upstream tag: $latest_tag"

      - name: Get last built tag
        id: last
        run: |
          last_tag=$(git tag --sort=-creatordate | head -n1 || true)
          echo "last_tag=$last_tag" >> $GITHUB_ENV
          echo "Last built tag: $last_tag"

      - name: Compare tags
        id: compare
        run: |
          if [ "${{ env.latest_tag }}" != "${{ env.last_tag }}" ]; then
            echo "new_release=true" >> $GITHUB_ENV
            echo "New release detected: ${{ env.latest_tag }}"
          else
            echo "new_release=false" >> $GITHUB_ENV
            echo "No new release. Skipping build."
          fi

      - name: Build and push Docker image
        if: env.new_release == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.latest_tag }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            UPSTREAM_TAG=${{ env.latest_tag }}

      - name: Tag repo for last build
        if: env.new_release == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.latest_tag }}
          git push origin ${{ env.latest_tag }}
